{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/ContactListItem/ContactListItem.module.scss","components/Filter/Filter.module.scss","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameId","shortid","generate","numberId","handleInputChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","Form","className","styles","form","Label","htmlFor","Control","type","pattern","title","required","onChange","id","Button","variant","Component","ContactListItem","contact","onDelete","item","href","onClick","ContactList","contacts","contact_list","map","Filter","handleFilterChange","filterId","filter","label","placeholder","App","addContact","data","checkUniqueName","prevState","alert","deleteContact","changeFilter","toLowerCase","findIndex","getFilteredContacts","includes","filteredContacts","length","Alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf7d2681.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__eUFHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__2c0Jf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__3Do0f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3SBXb\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { Button, Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    };\n\n    nameId = shortid.generate();\n    numberId = shortid.generate();\n    handleInputChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value,\n        });\n    };\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n    render() {\n        const { name, number } = this.state;\n        return (\n            <Form className={styles.form} onSubmit={this.handleSubmit}>\n                <Form.Label htmlFor={this.nameId}>\n                    Name\n                    <Form.Control\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={name}\n                        onChange={this.handleInputChange}\n                        id={this.nameId}\n                    />\n                </Form.Label>\n                <Form.Label htmlFor={this.numberId}>\n                    Number\n                    <Form.Control\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={number}\n                        onChange={this.handleInputChange}\n                        id={this.numberId}\n                    />\n                </Form.Label>\n                <Button variant=\"outline-dark\" type=\"sumbit\">\n                    Add contact\n                </Button>\n            </Form>\n        );\n    }\n}\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport styles from './ContactListItem.module.scss';\nclass ContactListItem extends Component {\n    static propTypes = {\n        contact: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }).isRequired,\n        onDelete: PropTypes.func.isRequired,\n    };\n    state = {\n        name: '',\n        number: '',\n    };\n    render() {\n        const { contact, onDelete } = this.props;\n        return (\n            <li className={styles.item}>\n                <p>{contact.name}</p>\n                <a href={'tel:' + contact.number}>{contact.number}</a>\n                <Button\n                    variant=\"outline-dark\"\n                    type=\"button\"\n                    onClick={() => {\n                        onDelete(contact.id);\n                    }}\n                >\n                    Delete\n                </Button>\n            </li>\n        );\n    }\n}\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.scss';\nimport ContactListItem from '../ContactListItem/';\n\nexport default function ContactList({ contacts, onDelete }) {\n    return (\n        <ul className={styles.contact_list}>\n            {contacts.map(contact => (\n                <ContactListItem\n                    key={contact.id}\n                    contact={contact}\n                    onDelete={onDelete}\n                />\n            ))}\n        </ul>\n    );\n}\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { Form } from 'react-bootstrap';\n\nimport styles from './Filter.module.scss';\n\nclass Filter extends Component {\n    static propTypes = {\n        filter: PropTypes.string.isRequired,\n        title: PropTypes.string,\n        onChange: PropTypes.func.isRequired,\n    };\n    handleFilterChange = event => {\n        const { value } = event.target;\n        this.props.onChange(value);\n    };\n    filterId = shortid.generate();\n    render() {\n        const { filter, title } = this.props;\n        return (\n            <label className={styles.label} htmlFor={this.filterId}>\n                <span>{title}</span>\n                <Form.Control\n                    type=\"text\"\n                    name=\"filter\"\n                    required\n                    value={filter}\n                    onChange={this.handleFilterChange}\n                    placeholder=\"Search...\"\n                    id={this.filterId}\n                />\n            </label>\n        );\n    }\n}\nexport default Filter;\n","import { Component } from 'react';\nimport shortid from 'shortid';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Alert } from 'react-bootstrap';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter/';\n\nexport default class App extends Component {\n    state = {\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        filter: '',\n    };\n\n    addContact = data => {\n        this.checkUniqueName(data.name) === -1\n            ? this.setState(prevState => ({\n                  contacts: [\n                      ...prevState.contacts,\n                      { id: shortid.generate(), ...data },\n                  ],\n              }))\n            : alert(`${data.name} is already in contacts`);\n    };\n    deleteContact = id => {\n        this.setState(prevState => ({\n            contacts: [...prevState.contacts].filter(\n                contact => contact.id !== id,\n            ),\n        }));\n    };\n\n    changeFilter = data => {\n        this.setState({ filter: data.toLowerCase() });\n    };\n\n    checkUniqueName = name => {\n        const { contacts } = this.state;\n        return contacts.findIndex(contact => contact.name === name);\n    };\n\n    getFilteredContacts = () => {\n        const { contacts, filter } = this.state;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter),\n        );\n    };\n\n    render() {\n        const { filter } = this.state;\n        const filteredContacts = this.getFilteredContacts();\n        return (\n            <div className=\"App\">\n                <h1>Phonebook</h1>\n                <ContactForm onSubmit={this.addContact} />\n                <h2>Contacts</h2>\n                <Filter\n                    title={'Find contacts by name'}\n                    filter={filter}\n                    onChange={this.changeFilter}\n                />\n                {filteredContacts.length ? (\n                    <ContactList\n                        contacts={filteredContacts}\n                        onDelete={this.deleteContact}\n                    />\n                ) : (\n                    <Alert className=\"Alert\" variant=\"dark\">\n                        Nothing found\n                    </Alert>\n                )}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}